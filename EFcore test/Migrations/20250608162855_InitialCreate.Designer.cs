// <auto-generated />
using System;
using EFcore_test.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFcore_test.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250608162855_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("EFcore_test.Models.Kurs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Kursy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nazwa = "MD"
                        },
                        new
                        {
                            Id = 2,
                            Nazwa = "ZSI"
                        },
                        new
                        {
                            Id = 3,
                            Nazwa = "SSI"
                        });
                });

            modelBuilder.Entity("EFcore_test.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdStudenta")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdStudenta")
                        .IsUnique();

                    b.ToTable("Studenci");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdStudenta = 1
                        },
                        new
                        {
                            Id = 2,
                            IdStudenta = 2
                        },
                        new
                        {
                            Id = 3,
                            IdStudenta = 3
                        },
                        new
                        {
                            Id = 4,
                            IdStudenta = 4
                        });
                });

            modelBuilder.Entity("EFcore_test.Models.StudentProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataUrodzenia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("RokStudiow")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("Profile");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataUrodzenia = new DateTime(2000, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Imie = "Jan",
                            Nazwisko = "Kowalski",
                            RokStudiow = 2,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            DataUrodzenia = new DateTime(2001, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Imie = "Anna",
                            Nazwisko = "Nowak",
                            RokStudiow = 1,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            DataUrodzenia = new DateTime(1999, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Imie = "Piotr",
                            Nazwisko = "Zieliński",
                            RokStudiow = 3,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 4,
                            DataUrodzenia = new DateTime(2000, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Imie = "Maria",
                            Nazwisko = "Wiśniewska",
                            RokStudiow = 2,
                            StudentId = 4
                        });
                });

            modelBuilder.Entity("KursStudent", b =>
                {
                    b.Property<int>("KursyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudenciId")
                        .HasColumnType("INTEGER");

                    b.HasKey("KursyId", "StudenciId");

                    b.HasIndex("StudenciId");

                    b.ToTable("KursStudent");
                });

            modelBuilder.Entity("EFcore_test.Models.StudentProfile", b =>
                {
                    b.HasOne("EFcore_test.Models.Student", "Student")
                        .WithOne("Profile")
                        .HasForeignKey("EFcore_test.Models.StudentProfile", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("KursStudent", b =>
                {
                    b.HasOne("EFcore_test.Models.Kurs", null)
                        .WithMany()
                        .HasForeignKey("KursyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFcore_test.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFcore_test.Models.Student", b =>
                {
                    b.Navigation("Profile")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
